services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    container_name: test_task_app_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: test_task_app_webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
    networks:
      - app-network

  #Postgres Service
  db:
    image: postgres
    container_name: test_task_app_db
    restart: unless-stopped
    tty: true
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsq
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  node:
    platform: linux/arm64/v8 #this line is optional if you are using Mac Silicon chip (M1/M2/M3)
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: test_task_app_node
    ports:
      - "3000:3000"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
